(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.React = {}));
})(this, (function (exports) { 'use strict';

	/**
	 * @description
	 * 当前hooks的集合
	 * 在不同的阶段 比如 mount/update currentDispatcher.current会指向不同的 hooks集合
	 * 通过修改 currentDispatcher.current 来达到不同阶段不同的处理
	 */
	const currentDispatcher = {
	    current: null
	};
	const resolveDispatcher = () => {
	    const dispatcher = currentDispatcher.current;
	    if (dispatcher === null) {
	        throw new Error('function component only');
	    }
	    return dispatcher;
	};

	const supportSymbol = typeof Symbol === 'function' && Symbol.for;
	const REACT_ELEMENT_TYPE = supportSymbol ? Symbol.for('react') : 0xeac7;

	const ReactElement = function (type, key, ref, props) {
	    const element = {
	        $$typeof: REACT_ELEMENT_TYPE,
	        type,
	        key,
	        ref,
	        props,
	        __mark__: 'MMAARRKK'
	    };
	    return element;
	};
	const jsx = function (type, config, ...children) {
	    let key = null;
	    let ref = null;
	    const props = {};
	    Object.entries(config ?? {}).forEach(([_key, value]) => {
	        if (_key === 'key' && value !== undefined) {
	            key = value + '';
	            return;
	        }
	        if (_key === 'ref' && value !== undefined) {
	            ref = value;
	            return;
	        }
	        props[_key] = value;
	    });
	    const childrenCount = children.length;
	    if (children.length === 1) {
	        props['children'] = children[0];
	    }
	    else if (childrenCount) {
	        props['children'] = children;
	    }
	    return ReactElement(type, key, ref, props);
	};

	const useState = (initalValue) => {
	    const dispatcher = resolveDispatcher();
	    return dispatcher.useState(initalValue);
	};
	const __birdge__ = {
	    currentDispatcher
	};
	const createElement = jsx;
	var index = {
	    version: '1.0.0',
	    createElement: jsx
	};

	exports.__birdge__ = __birdge__;
	exports.createElement = createElement;
	exports.default = index;
	exports.useState = useState;

	Object.defineProperty(exports, '__esModule', { value: true });

}));
