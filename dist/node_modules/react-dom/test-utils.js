(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react-dom')) :
	typeof define === 'function' && define.amd ? define(['exports', 'react-dom'], factory) :
	(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.testUtils = {}, global.ReactDOM));
})(this, (function (exports, ReactDOM) { 'use strict';

	function renderIntoDocument(element) {
	    const div = document.createElement('div');
	    // None of our tests actually require attaching the container to the
	    // DOM, and doing so creates a mess that we rely on test isolation to
	    // clean up, so we're going to stop honoring the name of this method
	    // (and probably rename it eventually) if no problems arise.
	    // document.documentElement.appendChild(div);
	    // @ts-ignore
	    return ReactDOM.createRoot(div).render(element);
	}

	exports.renderIntoDocument = renderIntoDocument;

}));
